{
  "openapi": "3.0.0",
  "info": {
    "description": "Ruslan Kirzhanov",
    "version": "1.0.0",
    "title": "Magic store",
    "contact": {
      "email": "r.kirzhanov@albato.ru"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Book Request",
      "description": "Example API for requesting and return books requests"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Returns all available books in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/booksResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book Request"
        ],
        "summary": "Create a new book",
        "requestBody": {
          "description": "Book Request Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/books"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          },
          "400": {
            "description": "Failed. Wrong data."
          }
        }
      }
    },
    "/books/{uuid}": {
      "get": {
        "tags": [
          "Book Request"
        ],
        "summary": "Get book with given UUID",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Book Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/book"
            }
          },
          "400": {
            "description": "Failed. Wrong data."
          },
          "404": {
            "description": "Failed. Book was not found."
          }
        }
      },
      "put": {
        "summary": "edit a book request by uuid",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Book Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Book Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/book"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/book"
            }
          },
          "400": {
            "description": "Failed. Wrong data."
          }
        }
      },
      "delete": {
        "summary": "Delete Book Request by UUID",
        "tags": [
          "Book Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "description": "Book Request uuid",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. Book was not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "uuid": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "books": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "release_date": {
            "type": "string",
            "format": "string"
          },
          "distributed_by": {
            "type": "string",
            "format": "string"
          },
          "description": {
            "type": "string",
            "format": "string"
          },
          "rating": {
            "type": "number"
          },
          "length": {
            "type": "number"
          }
        }
      },
      "book": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "format": "string"
          },
          "release_date": {
            "type": "string",
            "format": "string"
          },
          "distributed_by": {
            "type": "string",
            "format": "string"
          },
          "description": {
            "type": "string",
            "format": "string"
          },
          "rating": {
            "type": "number"
          },
          "length": {
            "type": "number"
          }
        }
      },
      "booksResponse": {
        "type": "object",
        "properties": {
          "bookRequest": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/book"
            }
          }
        }
      }
    }
  }
}
